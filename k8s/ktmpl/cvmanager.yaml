kind: "Template"
apiVersion: "v1"
metadata:
  name: "cvmanager-template"
  annotations:
    description: "Template for cvmanager service"
labels:
  template: "cvmanager-template"
objects:
  - kind: CustomResourceDefinition
    # https://kubernetes.io/docs/tasks/access-kubernetes-api/extend-api-custom-resource-definitions/
    apiVersion: apiextensions.k8s.io/v1beta1
    metadata:
      name: containerversions.custom.k8s.io
    spec:
      group: custom.k8s.io
      version: v1
      scope: Namespaced
      names:
        plural: containerversions
    #    singular: containerversion
        kind: ContainerVersion
    #    listKind: ContainerVersionList
        shortNames:
        - cv
      validation:
       # openAPIV3Schema is the schema for validating custom objects.
        openAPIV3Schema:
          properties:
            spec:
              required:
                - tag
                - imageRepo
                - selector
                - container
              properties:
                tag:
                  type: string
                  pattern: '^[a-zA-Z0-9-_.]*$'
                versionSyntax:
                  type: string
                  ## default to regex for sha
                  # default: '[0-9a-f]{5,40}'
                imageRepo:
                  type: string
                  pattern: '^[^:]*$'
                # selector:
                #   type: objects
                selector:
                  properties:
                    cvapp:
                      type: string
                  required:
                    - cvapp
                  # type: object
                  # See https://github.com/kubernetes/kubernetes/issues/59485 maps not supported fully
                  # additionalProperties:
                  #   type: string
                  # # This would work .. map should only be keyed on string type
                  # # so not using it
                  # additionalProperties: true
                container:
                  name:
                    type: string
                  verify:
                    type: array
                    kind:
                      type: string
                    image:
                      type: string
                      pattern: '^[^:]*$'
                    timeoutSeconds:
                      type: integer
                  required:
                    - name
                pollIntervalSeconds:
                  type: integer
                livenessSeconds:
                  type: integer
                maxAttempts:
                  type: integer
                config:
                  name:
                    type: string
                  key:
                    type: string
                strategy:
                  kind:
                    type: string
                  blueGreen:
                    serviceName:
                      type: string
                    verificationServiceName:
                      type: string
                    labelNames:
                      type: array
                      items:
                        type: string
                    scaleDown:
                      type: boolean
                    timeoutSeconds:
                      type: integer
                  verify:
                    kind:
                      type: string
                    image:
                      type: string
                      pattern: '^[^:]*$'
                    timeoutSeconds:
                      type: integer

  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: cvmanagerapp
      namespace: kube-system
      labels:
        app: cvmanager
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: cvmanager
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 0
      minReadySeconds: 30
      template:
        metadata:
          labels:
            app: cvmanager
            component: cvmanagerapp
        spec:
          nodeSelector:
            node-role.kubernetes.io/master: ""
          tolerations:
            - key: "node-role.kubernetes.io/master"
              effect: NoSchedule
          containers:
            - name: cvmanagerapp
              image: $(REPOSITORY):$(VERSION)
              imagePullPolicy: Always
              ports:
                - name: http
                  protocol: TCP
                  containerPort: 8081
              args:
                - "run"
                - "--configmap-key=kube-system/cvmanager"
                - "--history=$(USE_HISTORY)"
                - "--rollback=$(USE_ROLLBACK)"
                - "--cv-img-repo=$(REPOSITORY)"
                - "--v=8"
                - "--logtostderr=true"
              env:
              - name: NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: STATS_HOST
                valueFrom:
                  fieldRef:
                    fieldPath: status.hostIP
              livenessProbe:
                httpGet:
                  path: /alive
                  port: http
              readinessProbe:
                httpGet:
                  path: /alive
                  port: http
  - kind: Service
    apiVersion: v1
    metadata:
      name: cvmanagerapp
      namespace: kube-system
      labels:
        app: cvmanager
    spec:
      type: NodePort
      ports:
        - port: 80
          targetPort: http
          protocol: TCP
          name: http
      selector:
        app: cvmanager
  - kind: ContainerVersion
    apiVersion: custom.k8s.io/v1
    metadata:
      name: cvmanager-cv
      namespace: kube-system
    spec:
      imageRepo: $(REPOSITORY)
      tag: $(VERSION)
      pollIntervalSeconds: 300
      selector:
        cvapp: cvmanagercv
      container:
        name: cvmanagerapp
      config:
        name: cvmanager
        key: version
  - kind: ConfigMap
    apiVersion: v1
    data:
      version: $(VERSION)
    metadata:
      name: cvmanager
      namespace: kube-system
parameters:
  - name: "VERSION"
    description: "version of the application for deployment"
    required: true
    parameterType: "string"
    value: "latest"
  - name: "REPOSITORY"
    description: "repository to pull image from"
    required: true
    parameterType: "string"
    value: "nearmap/cvmanager"
  - name: "USE_HISTORY"
    description: "Flag to indicate whether cvmanager should record history in configmap"
    required: true
    value: true
    parameterType: "bool"
  - name: "USE_ROLLBACK"
    description: "Flag to indicate whether cvmanager should rollback if a deployment fails"
    required: true
    value: true
    parameterType: "bool"

